@startuml
top to bottom direction
hide empty methods

' Here we adjust the horizontal spacing for better spatial rendering (the PlantUML default is ~20)
skinparam nodesep 20
' Here we adjust the vertical spacing for better spatial rendering (the PlantUML default is ~30)
skinparam ranksep 30

skinparam BackgroundColor #FFFFFF
skinparam shadowing false
skinparam RoundCorner 5
skinparam BorderColor #454645
skinparam ArrowColor #454645
skinparam FontColor #000000

skinparam class {
  ' Concrete classes style definition
  BackgroundColor #FFFFE0
  FontColor #000000
  AttributeFontColor #000000
  StereotypeFontColor #000000
  HeaderFontColor #000000
  BorderColor #454645
  BorderThickness 1
  
  ' Abstract classes style definition
  BackgroundColor<<abstract>> #D3D3D3
  FontColor<<abstract>> #000000
  AttributeFontColor<<abstract>> #000000
  StereotypeFontColor<<abstract>> #000000
  HeaderFontColor<<abstract>> #000000
  BorderColor<<abstract>> #454645
  BorderThickness<<abstract>> 1
  
  ' Enumerations style definition
  BackgroundColor<<enumeration>> #90EE90
  FontColor<<enumeration>> #000000
  AttributeFontColor<<enumeration>> #000000
  StereotypeFontColor<<enumeration>> #000000
  HeaderFontColor <<enumeration>> #000000
  BorderColor<<enumeration>> #454645
  BorderThickness<<enumeration>> 1
  
  ' CIMDatatypes style definition
  BackgroundColor<<CIMDatatype>> #FFEBCD
  FontColor<<CIMDatatype>> #000000
  AttributeFontColor<<CIMDatatype>> #000000
  StereotypeFontColor<<CIMDatatype>> #000000
  HeaderFontColor<<CIMDatatype>> #000000
  BorderColor<<CIMDatatype>> #454645
  BorderThickness<<CIMDatatype>> 1
  
  ' Compound classes style definition
  BackgroundColor<<Compound>> #FFEBCD
  FontColor<<Compound>> #000000
  AttributeFontColor<<Compound>> #000000
  StereotypeFontColor<<Compound>> #000000
  HeaderFontColor<<Compound>> #000000
  BorderColor<<Compound>> #454645
  BorderThickness<<Compound>> 1
  
  ' Primitive classes style definition
  BackgroundColor<<Primitive>> #E6E6FF
  FontColor<<Primitive>> #000000
  AttributeFontColor<<Primitive>> #000000
  StereotypeFontColor<<Primitive>> #000000
  HeaderFontColor<<Primitive>> #000000
  BorderColor<<Primitive>> #454645
  BorderThickness<<Primitive>> 1
  
  ' Errors classes style definition
  BackgroundColor<<error>> #FFC0CB
  FontColor<<error>> #000000
  AttributeFontColor<<error>> #000000
  StereotypeFontColor<<error>> #000000
  HeaderFontColor<<error>> #000000
  BorderColor<<error>> #454645
  BorderThickness<<error>> 1
}
skinparam shadowing true

hide <<abstract>> stereotype
hide <<error>> stereotype


skinparam note {
  BorderColor #454645
  BorderThickness 1.5
  FontSize 14
  Font Bold
  FontColor #000000
}
' Add a note towards the upper left corner of the diagram
note as MarketDERNote #lightyellow
   Profile: MarketDER
   Namespace: https://ucaiug.org/2023/MarketDER#
   
   Profile Notes:
      V1.2: 2024 Updates to ResourceCertification (removed qualificationFlag, added isCertified);
      ResourceRegistrationStatus enum value changed from InActive to Inactive
      
      V1.1: 2024 Generation with latest UML
      
      V1: 2023 Initial Creation
      
end note

' RegisteredResource inherits from IdentifiedObject
abstract class RegisteredResource  <<abstract>> {
}

IdentifiedObject <|-- RegisteredResource

' Agreement inherits from Document
abstract class Agreement  <<abstract>> {
   +signDate : date [0..1]
   +validityInterval : DateTimeInterval [1]
}

Document <|-- Agreement

' ContractResourceCertificationAgreement inherits from Agreement
abstract class ContractResourceCertificationAgreement  <<abstract>> {
}

Agreement <|-- ContractResourceCertificationAgreement

' CoordinateSystem inherits from IdentifiedObject
abstract class CoordinateSystem  <<abstract>> {
   +crsUrn : string [1]
}

IdentifiedObject <|-- CoordinateSystem

' Document inherits from IdentifiedObject
abstract class Document  <<abstract>> {
   +comment : string [0..1]
   +createdDateTime : dateTime [0..1]
   +revisionNumber : string [0..1]
   +subject : string [0..1]
   +title : string [0..1]
   +type : string [0..1]
}

IdentifiedObject <|-- Document

' ElectronicAddress
abstract class ElectronicAddress  <<abstract>> {
   +email1 : string [1]
   +email2 : string [0..1]
}


' IdentifiedObject
abstract class IdentifiedObject  <<abstract>> {
   +mRID : string [1]
   +description : string [0..1]
   +name : string [0..1]
}


' IndividualPnode inherits from Pnode
abstract class IndividualPnode  <<abstract>> {
}

Pnode <|-- IndividualPnode

' Location inherits from IdentifiedObject
abstract class Location  <<abstract>> {
   +type : string [0..1]
   +mainAddress : StreetAddress [1]
   +secondaryAddress : StreetAddress [0..1]
}

IdentifiedObject <|-- Location
Location "+Location 0..*" --> "+CoordinateSystem 0..1" CoordinateSystem
Location " " --> "+electronicAddress 0..1" ElectronicAddress
Location " " --> "+phone1 1" TelephoneNumber
Location "+Location 0..1" --> "+PositionPoints 0..*" PositionPoint
Location " " --> "+status 0..1" Status

' Enumeration MarketType
enum MarketType <<enumeration>>  {
   DAM
   HAM
   RTM
   RUC
}

' Pnode inherits from IdentifiedObject
abstract class Pnode  <<abstract>> {
}

IdentifiedObject <|-- Pnode

' PositionPoint
abstract class PositionPoint  <<abstract>> {
   +xPosition : string [1]
   +yPosition : string [1]
}


' PowerSystemResource inherits from IdentifiedObject
abstract class PowerSystemResource  <<abstract>> {
}

IdentifiedObject <|-- PowerSystemResource
PowerSystemResource "+PowerSystemResources 0..*" --> "+Location 0..1" Location

' Enumeration PriorityKind
enum PriorityKind <<enumeration>>  {
   high
   low
   medium
}

' RegisteredDistributedResource inherits from RegisteredResource
class RegisteredDistributedResource   {
   +distributedResourceType : string [0..1]
   +energyDownRampRate : ActivePowerChangeRate [0..1]
   +energyUpRampRate : ActivePowerChangeRate [0..1]
   +loadCriticality : PriorityKind [0..1]
   +maximumResponseTime : Seconds [0..1]
}

RegisteredResource <|-- RegisteredDistributedResource

' RegisteredResource inherits from PowerSystemResource
abstract class RegisteredResource  <<abstract>> {
   +isAggregatedRes : YesNo [1]
   +registrationStatus : ResourceRegistrationStatus [0..1]
}

PowerSystemResource <|-- RegisteredResource
RegisteredResource "+RegisteredResource 0..*" --> "+AggregatedRegisteredResource 0..*" Aggregated_RegisteredResource
RegisteredResource "+RegisteredResources 0..*" --> "+Pnode 0..1" IndividualPnode
RegisteredResource "+RegisteredResource 0..*" --> "+ResourceCapacity 0..*" ResourceCapacity
RegisteredResource "+RegisteredResource 0..1" --> "+ResourceCertification 0..*" ResourceCertification

' ResourceCapacity
abstract class ResourceCapacity  <<abstract>> {
   +capacityType : ResourceCapacityType [0..1]
   +defaultCapacity : decimal [0..1]
   +maximumCapacity : decimal [0..1]
   +minimumCapacity : decimal [0..1]
   +unitMultiplier : UnitMultiplier [0..1]
}


' Enumeration ResourceCapacityType
enum ResourceCapacityType <<enumeration>>  {
   FO
   MO
   NR
   RA
   RD
   RMR
   RU
   SR
}

' ResourceCertification
abstract class ResourceCertification  <<abstract>> {
   +isCertified : boolean [0..1]
   +market : MarketType [0..1]
   +type : ResourceCertificationKind [0..1]
}

ResourceCertification "+ResourceCertification 0..1" --> "+ContractResourceCertificationAgreement 0..*" ContractResourceCertificationAgreement

' Enumeration ResourceCertificationKind
enum ResourceCertificationKind <<enumeration>>  {
   BLACKSTART
   Capacity
   DemandSideResponse
   Energy
   IntermittentResource
   NonSpinningReserve
   RegulationDown
   RegulationUp
   ReliabilityMustRun
   ReliabilityUnitCommitment
   SpinningReserve
   SynchronousCondenser
}

' Enumeration ResourceRegistrationStatus
enum ResourceRegistrationStatus <<enumeration>>  {
   Active
   Decommissioned
   Inactive
   Mothballed
   Planned
}

' Status
abstract class Status  <<abstract>> {
   +dateTime : dateTime [0..1]
   +reason : string [0..1]
   +remark : string [0..1]
   +value : string [0..1]
}


' StreetDetail
abstract class StreetDetail  <<abstract>> {
   +addressGeneral : string [1]
   +addressGeneral2 : string [0..1]
   +addressGeneral3 : string [0..1]
   +buildingName : string [0..1]
   +code : string [0..1]
   +name : string [0..1]
   +number : string [0..1]
   +prefix : string [0..1]
   +suffix : string [0..1]
   +suiteNumber : string [0..1]
   +type : string [0..1]
   +withinTownLimits : boolean [0..1]
}


' TelephoneNumber
abstract class TelephoneNumber  <<abstract>> {
   +areaCode : string [0..1]
   +cityCode : string [0..1]
   +countryCode : string [0..1]
   +dialOut : string [0..1]
   +extension : string [0..1]
   +internationalPrefix : string [0..1]
   +ituPhone : string [0..1]
   +localNumber : string [0..1]
}


' TownDetail
abstract class TownDetail  <<abstract>> {
   +code : string [0..1]
   +country : string [0..1]
   +name : string [0..1]
   +section : string [0..1]
   +stateOrProvince : string [0..1]
}


' Enumeration UnitMultiplier
enum UnitMultiplier <<enumeration>>  {
   E
   G
   M
   P
   T
   Y
   Z
   a
   c
   d
   da
   f
   h
   k
   m
   micro
   n
   none
   p
   y
   [Remaining 6 literals hidden]
}

' Enumeration UnitSymbol
enum UnitSymbol <<enumeration>>  {
   WPers
}

' Enumeration YesNo
enum YesNo <<enumeration>>  {
   NO
   YES
}

' IdentifiedObject
abstract class IdentifiedObject  <<abstract>> {
   +mRID : string [1]
}


@enduml
